plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
}

group = 'animores'
version = '1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	// Database
	implementation 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// AWS
	implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-messaging', version: '2.2.3.RELEASE'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-autoconfigure', version: '2.2.3.RELEASE'

	// AspectJ
	implementation 'org.aspectj:aspectjweaver:1.9.7'

	// Mail
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.5'

	// Spring Batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.batch:spring-batch-test'

	// Monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// SpringDoc OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// AWS Serverless
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.0-M2'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = '0.8.7'
}

jacocoTestReport {
	dependsOn(test) // Ensure tests are run before generating report
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}
	afterEvaluate {
		classDirectories = fileTree(dir: 'build/classes/java/test')
	}
	executionData = files('build/jacoco/test.exec')
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.70
				counter = 'INSTRUCTION'
			}
			limit {
				minimum = 0.68
				counter = 'BRANCH'
			}
			enabled = true
		}
	}
}

test {
	finalizedBy 'jacocoTestReport'
	useJUnitPlatform()
}
